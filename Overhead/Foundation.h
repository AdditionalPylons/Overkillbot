/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */


@class NSMutableDictionary, NSString;

typedef struct SpreadSheet {
	float headAngle;
	float chestAngle;
	float stomachAngle;
	float pelvisAngle;
	float rthighAngle;
	float lthighAngle;
	float rcalfAngle;
	float lcalfAngle;
	float rupperarmAngle;
	float lupperarmAngle;
	float rforearmAngle;
	float lforearmAngle;
	float gunAngle;
	float chassisAngle;
	float gunfireAngle;
	CGPoint headPos;
	CGPoint bodyPos;
	CGPoint chestPos;
	CGPoint stomachPos;
	CGPoint pelvisPos;
	CGPoint rthighPos;
	CGPoint lthighPos;
	CGPoint rcalfPos;
	CGPoint lcalfPos;
	CGPoint rupperarmPos;
	CGPoint lupperarmPos;
	CGPoint rforearmPos;
	CGPoint lforearmPos;
	CGPoint gunPos;
	CGPoint chassisPos;
	CGPoint gunfirePos;
	float nextStepIn;
	bool processing;
	bool done;
	bool gunfire;
} SpreadSheet;

typedef struct Color {
	float red;
	float green;
	float blue;
} Color;

@interface Foundation : NSObject <NSCopying> {
@private
	NSString* name;
	int layer;
	BOOL destructible;
	CGRect area;
	int score;
	float alpha;
	float scale;
	int textureIndex;
	NSString* textureName;
	NSMutableDictionary* textureDictionary;
	Color color;
	NSString* stringTexts;
	int font;
	int align;
	BOOL _debug;
	SpreadSheet spreadSheet[16][10];
	BOOL drawTexture;
	BOOL alive;
	BOOL remove;
	CGPoint position;
	CGPoint speed;
	CGPoint nextPosition;
	CGPoint nextSpeed;
	CGPoint defaultPosition;
	CGPoint destination;
	CGPoint finalDestination;
	float animationTime;
	int animationIndex;
	int shadowIndex;
	float angle;
	float rotation;
	float nextAngle;
	float dTime;
	float deadTime;
	float scaleTime;
	CGPoint back;
	float health;
	float mobility;
	float range;
	float remainingHealth;
	float firerateTime;
	float reloadingTime;
	int actualAmmo;
	int defaultMobility;
	BOOL bought;
	int price;
	BOOL isGrenadeLauncher;
	float allFeatures;
	float accuracy;
	float fireRate;
	float reloadSpeed;
	float damage;
	int cadence;
	int ammoQuantity;
	CGPoint markPosition;
	CGPoint upgradeMenu_position;
	float upgradeMenu_scale;
	float vulnerability;
	BOOL shellPoint;
	BOOL useEasyGlyph;
	BOOL isNumber;
	CGPoint relativePosition;
}
//-(id).cxx_construct;
-(BOOL)isNumber;
-(void)setIsNumber:(BOOL)number;
-(BOOL)isUsedEasyGlyph;
-(BOOL)isShellPoint;
-(CGPoint)sumCGPoints:(CGPoint)points secondCGPoint:(CGPoint)point;
-(BOOL)isInRect:(CGRect)rect point:(CGPoint)point;
-(void)drawRadiusAt:(CGPoint)at radius:(float)radius;
-(float)distanceFromPoint:(CGPoint)point toPoint:(CGPoint)point2;
-(float)angleBetweenPoint:(CGPoint)point andPoint:(CGPoint)point2;
-(CGPoint)speedFromAngle:(float)angle;
-(void)setMobility:(float)mobility;
-(float)mobility;
-(void)setRemainingHealth:(float)health;
-(float)remainingHealth;
-(void)setHealth:(float)health;
-(float)health;
-(CGPoint)nextStep:(float)step;
-(void)setRemove:(BOOL)remove;
-(BOOL)remove;
-(void)setAlive:(BOOL)alive;
-(BOOL)alive;
-(void)setDeadTime:(float)time;
-(float)deadTime;
-(void)setRotation:(float)rotation;
-(float)rotation;
-(CGPoint)finalDestination;
-(void)setFinalDestination:(CGPoint)destination;
-(CGPoint)destination;
-(void)setDestination:(CGPoint)destination;
-(float)nextAngle;
-(CGPoint)nextPosition;
-(float)angle;
-(void)setAngle:(float)angle;
-(void)setMarkPosition:(CGPoint)position;
-(CGPoint)markPosition;
-(void)setBought:(BOOL)bought;
-(BOOL)bought;
-(void)setPrice:(int)price;
-(int)price;
-(void)setAmmoQuantity:(int)quantity;
-(int)ammoQuantity;
-(void)setReloadSpeed:(float)speed;
-(float)reloadSpeed;
-(int)cadence;
-(void)setCadence:(int)cadence;
-(void)setFireRate:(float)rate;
-(float)fireRate;
-(void)setAccuracy:(float)accuracy;
-(float)accuracy;
-(void)setDamage:(float)damage;
-(float)damage;
-(void)setGrenadeLauncher:(BOOL)launcher;
-(BOOL)isGrenadeLauncher;
-(void)setAllFeatures:(float)features;
-(float)allFeatures;
-(float)scale;
-(void)setScale:(float)scale;
-(CGPoint)relativePosition;
-(void)setRelativePosition:(CGPoint)position;
-(CGPoint)position;
-(void)setPosition:(CGPoint)position;
-(float)alpha;
-(void)setAlpha:(float)alpha;
-(void)setVulnerability:(float)vulnerability;
-(float)vulnerability;
-(BOOL)isDrawTexture;
-(void)setDrawTexture:(BOOL)texture;
-(int)textureIndex;
-(void)setTextureIndex:(int)index;
-(id)textureDictionary;
-(void)setTextureDictionary:(id)dictionary;
-(float)upgradeMenu_scale;
-(void)setUpgradeMenu_scale:(float)scale;
-(CGPoint)upgradeMenu_position;
-(void)setUpgradeMenu_position:(CGPoint)position;
-(Color)color;
-(void)setColorWithRed:(float)red green:(float)green blue:(float)blue;
-(id)stringText;
-(void)setStringText:(id)text;
-(int)font;
-(void)setFont:(int)font;
-(int)getLayer;
-(void)setLayer:(int)layer;
-(id)name;
-(void)setName:(id)name;
-(id)textureName;
-(void)setTextureName:(id)name;
-(int)score;
-(void)setScore:(int)score;
-(CGRect)area;
-(void)setArea:(CGRect)area;
-(BOOL)destructible;
-(void)setDestructible:(BOOL)destructible;
-(int)align;
-(void)setAlign:(int)align;
-(id)copyWithZone:(NSZone*)zone;
-(void)dealloc;
-(id)initWithText:(id)text position:(CGPoint)position font:(int)font alignment:(int)alignment red:(float)red green:(float)green blue:(float)blue alpha:(float)alpha scale:(float)scale rotation:(float)rotation drawTexture:(BOOL)texture;
-(id)initWithText:(id)text position:(CGPoint)position font:(int)font alignment:(int)alignment red:(float)red green:(float)green blue:(float)blue alpha:(float)alpha scale:(float)scale rotation:(float)rotation useEasyGlyph:(BOOL)glyph isNumber:(BOOL)number drawTexture:(BOOL)texture;
-(id)initWithText:(id)text position:(CGPoint)position font:(int)font red:(float)red green:(float)green blue:(float)blue alpha:(float)alpha scale:(float)scale rotation:(float)rotation drawTexture:(BOOL)texture;
-(id)initWithText:(id)text position:(CGPoint)position font:(int)font red:(float)red green:(float)green blue:(float)blue alpha:(float)alpha scale:(float)scale rotation:(float)rotation useEasyGlyph:(BOOL)glyph isNumber:(BOOL)number drawTexture:(BOOL)texture;
-(id)initWithPosition:(CGPoint)position alpha:(float)alpha scale:(float)scale textureDictionary:(id)dictionary textureName:(id)name drawTexture:(BOOL)texture;
-(id)initWithPosition:(CGPoint)position alpha:(float)alpha scale:(float)scale textureDictionary:(id)dictionary textureIndex:(int)index drawTexture:(BOOL)texture;
-(id)initWithTargetZone:(CGRect)targetZone score:(int)score;
-(id)initWithTargetZone:(CGRect)targetZone score:(int)score vulnerability:(float)vulnerability isShellPoint:(BOOL)point;
-(id)initWithPosition:(CGPoint)position textureName:(id)name;
-(id)initWithPosition:(CGPoint)position health:(float)health destructible:(BOOL)destructible textureDictionary:(id)dictionary;
-(id)initPictureObjectWithPosition:(CGPoint)position alpha:(float)alpha scale:(float)scale textureName:(id)name drawTexture:(BOOL)texture;
@end

